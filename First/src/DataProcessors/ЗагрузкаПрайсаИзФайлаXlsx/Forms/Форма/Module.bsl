
&НаСервере
Процедура ЗагрузитьНаСервере(Адрес, Расширение, ОтветПользователя, Контрагент, ПровестиДокумент) Экспорт
	
	ДанныеФайла = ПолучитьИзВременногоХранилища(Адрес);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДанныеФайла.Записать(ИмяВременногоФайла);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ИмяВременногоФайла);
	
	КоличествоСтрок = ТабДок.ВысотаТаблицы;
	
	РазборФайла = новый Массив;
	
	Для Сч = 2 По КоличествоСтрок Цикл
		
		// заполняем переменные
		Наименование = ТабДок.Область(Сч, 1).Текст;
		Цена = ТабДок.Область(Сч, 2).Текст;

		// Готовим коллекцию данных для последующего заполнения документа
		ДанныеСтрокиДокумента = Новый Структура;
		ДанныеСтрокиДокумента.Вставить("Наименование", Наименование);
		ДанныеСтрокиДокумента.Вставить("Цена", Цена);

		РазборФайла.Добавить(ДанныеСтрокиДокумента);

	
		//НоваяСтрока = Таблица.Добавить();
		//НоваяСтрока.Наименование = Наименование;
		//НоваяСтрока.Цена = Цена;
		
	КонецЦикла;

		 // Если пользователь ответил "Не загружать цены" (просто создать документ) или "Создавать номенклатуру" (создать документ + номенклатуру)
		Если ОтветПользователя = 1 ИЛИ ОтветПользователя = 3 Тогда
			СоздатьДокумент(Контрагент, РазборФайла, ПровестиДокумент, ОтветПользователя);
		КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ПрочитатьФайлАсинхронно();
КонецПроцедуры             

&НаКлиенте
Асинх Процедура ПрочитатьФайлАсинхронно()
	
	ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх(,,, ПутьКФайлу, УникальныйИдентификатор);
	
	Если ОписаниеФайла = Неопределено ИЛИ ОписаниеФайла.ПомещениеФайлаОтменено Тогда
		Возврат;
	КонецЕсли;
	
	// Вопрос пользователю
	ТекстВопроса = "Продолжить в случае отстутсвия в справочнике номенклатуры?";
	ОтветПользователя = Ждать ВопросПользователюАсинх(ТекстВопроса);
	
	// Нужно ли документ сразу провести
	Если Элементы.СогласоватьЦены.Доступность = Истина И СогласоватьЦены = Истина Тогда
		  ПровестиДокумент = Истина;
	Иначе ПровестиДокумент = Ложь;
	КонецЕсли;
               
	//Сообщить("ОписаниеФайла.Адрес: " + ОписаниеФайла.Адрес);
	//Сообщить("ОписаниеФайла.СсылкаНаФайл.Расширение: " + ОписаниеФайла.СсылкаНаФайл.Расширение);
	//Сообщить("ОтветПользователя: " + ОтветПользователя);
	//Сообщить("Контрагент: " + Контрагент);
	//Сообщить("ПровестиДокумент: " + ПровестиДокумент);
	ЗагрузитьНаСервере(ОписаниеФайла.Адрес, ОписаниеФайла.СсылкаНаФайл.Расширение, ОтветПользователя, Контрагент, ПровестиДокумент);
	
КонецПроцедуры


&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыборФайлаАсинхронно();
КонецПроцедуры


&НаКлиенте
Асинх Процедура ВыборФайлаАсинхронно()
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = "ВыберитеФайл";
	ДиалогВыбора.МножественныйВыбор = Ложь;
	ДиалогВыбора.Фильтр = "Таблицы|*.xlsx;";
	ДиалогВыбора.ИндексФильтра = 1;
	
	РезультатВыбора = Ждать ДиалогВыбора.ВыбратьАсинх();
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПутьКФайлу = РезультатВыбора[0];
	

КонецПроцедуры

&НаКлиенте
Асинх Функция ВопросПользователюАсинх(ТекстВопроса)
	ВариантыОтвета = Новый СписокЗначений;
	ВариантыОтвета.Добавить(1, "Не загружать цены");
	ВариантыОтвета.Добавить(2, "Не создавать документ");
	ВариантыОтвета.Добавить(3, "Создавать номенклатуру");
	ОтветПользователя = Ждать ВопросАсинх(ТекстВопроса, ВариантыОтвета);
		Возврат ОтветПользователя;
КонецФункции


&НаСервере
Функция ИмяСотрудника() Экспорт
	Если РольДоступна("ПолныеПрава") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;   
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.СогласоватьЦены.Доступность = ИмяСотрудника(); 
КонецПроцедуры


&НаСервереБезКонтекста
Процедура СоздатьДокумент(Контрагент, РазборФайла, ПровестиДокумент, ОтветПользователя)

	// Создаём новый документ
	ДокументЦены = Документы.УстановкаЦен.СоздатьДокумент();
	ДокументЦены.Дата = ТекущаяДата();
	ДокументЦены.Контрагент = Контрагент;
	ДокументЦены.Комментарий = "Загружен из файла";
	ДокументЦены.Ответственный = ПараметрыСеанса.ТекущийСотрудник;

	ШаблонСообщения = НСтр("ru = 'Номенклатура: %1 не найдена'");
	НоменклатурКДобавлению = 0;
	// Обходим коллекцию с данными файла и заполняем строки табличной части
	Для Каждого ДанныеСтроки Из РазборФайла Цикл

		Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(ДанныеСтроки.Наименование);

		// Если номенклатура не найдена, то сообщаем об этом пользователю
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			
			// Выбрано "Не загружать цены"
			Если ОтветПользователя = 1 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон(ШаблонСообщения, ДанныеСтроки.Наименование);
				Сообщение.Сообщить();
				Продолжить;       
			// Выбрано "Создавать номенклатуру"
			ИначеЕсли ОтветПользователя = 3 Тогда
				НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
				НоваяНоменклатура.Наименование = ДанныеСтроки.Наименование;
    			НоваяНоменклатура.Записать();
				// Проверяем после создания новой номенклатуры
				ПроверкаСозданияНоменклатуры = Справочники.Номенклатура.НайтиПоНаименованию(ДанныеСтроки.Наименование);
				Если Строка(ПроверкаСозданияНоменклатуры) = Строка(ДанныеСтроки.Наименование) Тогда
					Номенклатура = НоваяНоменклатура.Ссылка;
					Сообщить(СтрШаблон("Создана новая номенклатура: %1", ПроверкаСозданияНоменклатуры));
				Иначе Сообщить(СтрШаблон("Новая номенклатура: ""%1"" не создана", ДанныеСтроки.Наименование));
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

		НоваяСтрокаТЧ = ДокументЦены.Цены.Добавить();
		НоваяСтрокаТЧ.Номенклатура = Номенклатура;
		НоваяСтрокаТЧ.Цена = ДанныеСтроки.Цена;
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			НоменклатурКДобавлению = НоменклатурКДобавлению + 1;
		КонецЕсли;
		//Сообщить("ДанныеСтроки.Цена: " + ДанныеСтроки.Цена);
	КонецЦикла;	
	
	// Создаем документ
	// Проверяем, надо ли документ провести
	// Если строк нет (проверка на количество номенклатур), то пустой документ не создаем
	Если НоменклатурКДобавлению > 0 Тогда
		Если ПровестиДокумент = Истина Тогда
		  	ДокументЦены.Согласовано = Истина;
		  	ДокументЦены.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		Иначе ДокументЦены.Записать();
		КонецЕсли;
	
		Сообщить(СтрШаблон("Создан документ с номером: %1", ДокументЦены.Номер));
	КонецЕсли;
	
КонецПроцедуры

