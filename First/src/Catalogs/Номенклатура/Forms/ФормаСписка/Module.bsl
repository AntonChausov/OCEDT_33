
&НаКлиенте
Процедура СписокГруппПриАктивизацииСтроки(Элемент)

	ПолеРодитель = Новый ПолеКомпоновкиДанных("Родитель");
	НайденныйЭлементОтбора = РаботаСФормамиКлиент.НайтиИлиСоздатьОтборВСписке(Список, ПолеРодитель);
	НайденныйЭлементОтбора.Использование = Истина;
	НайденныйЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	НайденныйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НайденныйЭлементОтбора.ПравоеЗначение = Элементы.СписокГрупп.ТекущаяСтрока;
	
	// Таймаут при просмотре списка
	ПодключитьОбработчикОжидания("УстановитьОтбор", 0.1, Истина);
	
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьОтбор()
	
	ПолеРодитель = Новый ПолеКомпоновкиДанных("Родитель");
	НайденныйЭлементОтбора = РаботаСФормамиКлиент.НайтиИлиСоздатьОтборВСписке(Список, ПолеРодитель);
	НайденныйЭлементОтбора.Использование = Истина;
	НайденныйЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	НайденныйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НайденныйЭлементОтбора.ПравоеЗначение = Элементы.СписокГрупп.ТекущаяСтрока;	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьОтборЦен()

	ПолеНоменклатура = Новый ПолеКомпоновкиДанных("Номенклатура");
	ВыбранноеЗначение = Элементы.Список.ТекущаяСтрока;
	РаботаСФормамиКлиент.УстановитьОтборВСписке(СписокЦен, ПолеНоменклатура, ВыбранноеЗначение);

КонецПроцедуры


&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборЦен", 0.1, Истина);
КонецПроцедуры


