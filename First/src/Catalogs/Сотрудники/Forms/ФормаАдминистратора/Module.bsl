
&НаКлиенте
Процедура СлучайныйПароль(Команда)
	НовыйПароль = "";
	СимволыПароля = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
	
	ГСЧ = Новый ГенераторСлучайныхЧисел();  
	
	Для Н = 1 по 6 Цикл
		НовыйПароль = НовыйПароль + Сред(СимволыПароля, ГСЧ.СлучайноеЧисло(1, СтрДлина(СимволыПароля)), 1);
				   КонецЦикла;
				   
	Пароль = НовыйПароль;
	Элементы.Пароль.РежимПароля = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект) Экспорт
	//Найдите пользователя ИБ по идентификатору — «ТекущийОбъект.ИдентификаторПользователяИБ». 
	//Заполните по данным пользователя ИБ реквизиты формы «ИмяДляВхода» и «Пароль». 
	//Реквизит «ВходРазрешён» заполните по реквизиту пользователя ИБ «АутентификацияСтандартная». 
	//Если идентификатор не заполнен, или поиск пользователя ИБ возвращает «Неопределено», считайте, что вход не разрешён, а имя и пароль пусты.

	Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);
	
	Если Пользователь <> Неопределено Тогда
	  	 ВходРазрешён = Пользователь.АутентификацияСтандартная;
		 ИмяДляВхода = Пользователь.Имя;
		 
 	 	 ПарольЗаполнен = Пользователь.ПарольУстановлен;
		 Если ПарольЗаполнен = Истина Тогда
			  Пароль = "**********";
		 Иначе
			  Пароль = "";
		 КонецЕсли;
		  
	Иначе
		 ВходРазрешён = Ложь;
		 ИмяДляВхода = "";
		 Пароль = "";
	КонецЕсли;


	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт 
	
	//Если идентификатор пользователя ИБ заполнен — найдите пользователя ИБ и 
	//	обновите его реквизиты значениями реквизитов «ВходРазрешён», «ИмяДляВхода» и «Пароль». 
	//Если идентификатор не заполнен, а флажок «ВходРазрешён» выставлен — создайте пользователя ИБ и 
	//	добавьте ему роль «Метаданные.Роли.БазовыеПрава».
	//После создания пользователя ИБ присвойте его идентификатор реквизиту «ИдентификаторПользователяИБ» записываемого объекта, 
	//чтобы найти этого пользователя ИБ при следующем открытии формы. 
	//Обратите внимание, что учебная версия платформы не позволяет задать непустой пароль. 
	//Логику задания пароля всё равно нужно реализовать, а в тестах задавать пустой пароль.
	
	Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);
	 
	// Создание пользователя ИБ
	
		// Если Вход Разрешен
	Если Пользователь = Неопределено И ЗначениеЗаполнено(ИмяДляВхода) И ЗначениеЗаполнено(Пароль) Тогда

	     НовыйПользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
		 НовыйПользователь.Имя = ИмяДляВхода;
		 НовыйПользователь.ПолноеИмя = ИмяДляВхода;
		 НовыйПользователь.АутентификацияСтандартная = ВходРазрешён;
		 НовыйПользователь.Роли.Добавить(Метаданные.Роли.Найти("БазовыеПрава"));
	     НовыйПользователь.Пароль = "";
		 //НовыйПользователь.ПарольУстановлен = Истина;
	  	 НовыйПользователь.Записать();
		 ТекущийОбъект.ИдентификаторПользователяИБ = НовыйПользователь.УникальныйИдентификатор;
		 
		 // Если Вход НЕ Разрешен
	ИначеЕсли Пользователь = Неопределено И ВходРазрешён = Ложь И ЗначениеЗаполнено(ИмяДляВхода) И ЗначениеЗаполнено(Пароль) Тогда
		 
	     НовыйПользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
		 НовыйПользователь.Имя = ИмяДляВхода;
		 НовыйПользователь.ПолноеИмя = ИмяДляВхода;
		 НовыйПользователь.АутентификацияСтандартная = ВходРазрешён;
		 НовыйПользователь.Роли.Добавить(Метаданные.Роли.Найти("БазовыеПрава"));
	     НовыйПользователь.Пароль = "";
		 //НовыйПользователь.ПарольУстановлен = Истина;
	  	 НовыйПользователь.Записать();
		 ТекущийОбъект.ИдентификаторПользователяИБ = НовыйПользователь.УникальныйИдентификатор;

		 // Если Имя для входа не заполнено
	 ИначеЕсли Пользователь = Неопределено И НЕ ЗначениеЗаполнено(ИмяДляВхода) Тогда
		 Сообщить("Имя для входа не заполнено");
	     Отказ = Истина;
		 
		 // Если Пароль НЕ заполнен
	 ИначеЕсли Пользователь = Неопределено И НЕ ЗначениеЗаполнено(Пароль) Тогда
         Сообщить("Пароль не заполнен");
         Отказ = Истина;
		 
	 КонецЕсли;
	 
	 // Ставим признак доступа
	 Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);
     Если Пользователь <> Неопределено Тогда
	 Пользователь.АутентификацияСтандартная = ВходРазрешён;
     КонецЕсли;
 
КонецПроцедуры
